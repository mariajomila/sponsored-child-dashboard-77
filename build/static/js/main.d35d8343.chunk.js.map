{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","sponsoredChildren","setSponsoredChildren","useEffect","fetch","headers","then","response","console","log","json","myJson","Object","entries","map","key","className","data","JSON","stringify","ShowSponsoredData","props","dataString","sponsoredChildrenData","parse","r","Card","style","width","Img","variant","src","imageLatestUrl","Body","Title","fullName","Text","gender","country","favoriteSubject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAIe,SAASA,IAAM,IAAD,EACuBC,mBAAS,MADhC,mBACpBC,EADoB,KACDC,EADC,KAuB3B,OAJAC,qBAAU,WAhBRC,MAAM,oIACL,CACCC,QAAU,CACR,eAAgB,mBAChB,OAAU,sBAIXC,MAAK,SAASC,GAEb,OADAC,QAAQC,IAAIF,GACLA,EAASG,UAEjBJ,MAAK,SAASK,GACbT,EAAqBS,QAKzB,IAGF,mCAEEV,GAAqBW,OAAOC,QAAQZ,GAAmBa,KAAI,YAAuB,IAAD,mBAAXC,EAAW,UAC/E,OACE,qBAAKC,UAAU,YAAf,SACCf,EAAkBc,IAAQ,cAAC,EAAD,CAA6BE,KAAMC,KAAKC,UAAUlB,EAAkBc,KAA5CA,UAU3D,IAAMK,EAAoB,SAACC,GAEvB,IAAIC,EAAaD,EAAMJ,KACnBM,EAAwBL,KAAKM,MAAMF,GAEvC,OADDd,QAAQC,IAAIc,GAEf,yCAEAA,GAAyBA,EAAsBT,KAAI,SAACW,EAAEV,GAAH,OACnD,eAACW,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKN,EAAEO,iBAC/B,eAACN,EAAA,EAAKO,KAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,UAAaT,EAAEU,WACf,eAACT,EAAA,EAAKU,KAAN,WACE,sBAAKpB,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,qBACA,sBAAKA,UAAU,QAAf,cAAyBS,EAAEY,aAE3B,sBAAKrB,UAAU,MAAf,UACA,qBAAKA,UAAU,QAAf,sBACA,sBAAKA,UAAU,QAAf,cAAyBS,EAAEa,cAE3B,sBAAKtB,UAAU,MAAf,UACA,qBAAKA,UAAU,QAAf,qBACA,sBAAKA,UAAU,QAAf,cAAyBS,EAAEc,gBAAkBd,EAAEc,gBAAkB,6BCvD1DC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnD,EAAD,MAEFoD,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d35d8343.chunk.js","sourcesContent":["import React, {  useEffect,useState } from 'react';\n\nimport { Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default function App(){\n  const [sponsoredChildren, setSponsoredChildren] = useState(null);\n  const getSponsoredData=()=>{\n    fetch('https://stg-svc.worldvision.ca/donorservice/api/profile/0c5cff858031433189bb6b392175e3ee/donor/children/en/NamedPrivate?svc=45507'\n    ,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    )\n      .then(function(response){\n        console.log(response)\n        return response.json();\n      })\n      .then(function(myJson) {\n        setSponsoredChildren(myJson)\n      });\n  }\n  useEffect(()=>{\n    getSponsoredData()\n  },[])\n \n  return (\n  <>{\n\n    sponsoredChildren && Object.entries(sponsoredChildren).map(function ([key, val]) {\n      return (\n        <div className=\"container\">\n        {sponsoredChildren[key] && <ShowSponsoredData key={key} data={JSON.stringify(sponsoredChildren[key])} />}\n        \n        </div>\n      )\n    })\n  }\n   </>\n  )\n}\n\nconst ShowSponsoredData = (props) => {\n\n    var dataString = props.data\n    var sponsoredChildrenData = JSON.parse(dataString);\n   console.log(sponsoredChildrenData);\n    return(\n<> {\n\nsponsoredChildrenData && sponsoredChildrenData.map((r,key)=>(\n<Card style={{ width: '18rem' }}>\n  <Card.Img variant=\"top\" src={r.imageLatestUrl} />\n  <Card.Body>\n    <Card.Title>{r.fullName}</Card.Title>\n    <Card.Text>\n      <div className=\"row\">\n        <div className=\"col-6\">Gender:</div>\n        <div className=\"col-6\"> {r.gender}</div>\n        </div>\n        <div className=\"row\">\n        <div className=\"col-6\">Country:</div>\n        <div className=\"col-6\"> {r.country}</div>\n        </div>\n        <div className=\"row\">\n        <div className=\"col-6\">Gender:</div>\n        <div className=\"col-6\"> {r.favoriteSubject ? r.favoriteSubject : \"None\"}</div>\n        </div>\n      \n    </Card.Text>\n   \n  </Card.Body>\n</Card>\n  \n\n))\n}</>\n    )\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}